{"version":3,"file":"static/js/162.6cea9167.chunk.js","mappings":"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","sources":["webpack://firstreact/./src/components/Profile/MyPost/MyPost.module.css?5bea","webpack://firstreact/./src/components/Profile/MyPost/Post/Post.module.css?5715","components/Profile/MyPost/Post/Post.js","components/Profile/MyPost/Post/PostContainer.js","components/Profile/MyPost/MyPost.js","components/Profile/MyPost/MyPostContainer.js","webpack://firstreact/./src/components/Profile/Profile.module.css?b512","components/Profile/ProfileStatus.js","components/Profile/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPost_posts__tFogf\",\"container\":\"MyPost_container__hyqj5\",\"add_form\":\"MyPost_add_form__VJyvt\",\"posts_items\":\"MyPost_posts_items__4dvnQ\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__4-HLW\",\"post__img\":\"Post_post__img__Tjwbv\",\"post__info\":\"Post_post__info__IFsjX\",\"post__like\":\"Post_post__like__ZwJWj\",\"post__message\":\"Post_post__message__X27da\",\"post__btn\":\"Post_post__btn__IRC5s\"};","import classes from \"./Post.module.css\";\r\nimport user from \"./../../../../assets/img/user.png\";\r\nimport like from \"./../../../../assets/img/like.png\";\r\nimport delete_icon from \"./../../../../assets/img/delete.png\";\r\n\r\nconst Post = (props) => {\r\n\r\n    let onDeletePost = (e) => {\r\n        e.preventDefault()\r\n        props.deletePost();\r\n    }\r\n    let onLikeClick = (e) =>{\r\n        e.preventDefault()\r\n        props.like();\r\n    }\r\n\r\n    return (\r\n        <div className={classes.post}>\r\n            {/*<div className={classes.post__img}>*/}\r\n            {/*    <img src=\"\" alt=\"\"/>*/}\r\n            {/*</div>*/}\r\n            <div className={classes.post__info}>\r\n                <div className={classes.post__img}>\r\n                    <img src={props.profileImage || user} width={50} alt=\"\"/>\r\n                </div>\r\n                <div className={classes.post__like}>\r\n                    <img src={like} width={30} onClick={onLikeClick } />\r\n                    <p>{props.post.likesCount}</p>\r\n                </div>\r\n            </div>\r\n            <div className={classes.post__message}>{props.post.message}</div>\r\n            <img src={delete_icon} width={30} onClick={onDeletePost} className={classes.post__btn} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import {deletePostAction, likeAction} from \"../../../../redux/profile-reducer\";\r\nimport store from './../../../../redux/redux-store';\r\nimport Post from \"./Post\";\r\n\r\nconst PostContainer = (props) => {\r\n\r\n\r\n    let deletePost = () => {\r\n        store.dispatch(deletePostAction(props.post.id))\r\n    }\r\n    let like = () =>{\r\n        store.dispatch(likeAction(props.post.id, props.post.likesCount++))\r\n    }\r\n\r\n    // let mappedPosts = props.state.posts.map(post => <Post post={post}  />)\r\n\r\n    return <Post post={props.post} deletePost={deletePost} like={like} profileImage={props.profileImage}/>;\r\n}\r\n\r\nexport default PostContainer;","import classes from \"./MyPost.module.css\";\r\n\r\nimport React from 'react'\r\nimport PostContainer from \"./Post/PostContainer\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, Textarea} from \"../../../utils/validators/FormValidator\";\r\n\r\nconst maxLength15 = maxLengthCreator(15);\r\n\r\nlet AddPostForm = (props) => {\r\n    return <div className={classes.add_form}>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name={'postText'} label={'Enter your text...'}\r\n            />\r\n            <button>Post</button>\r\n        </form>\r\n    </div>;\r\n}\r\n\r\nconst validate = (values) => {\r\n    const errors = []\r\n    if (!values.postText)\r\n        errors.postText = 'Required!'\r\n    else if (maxLength15(values))\r\n        errors.postText = maxLength15(values);\r\n    return errors;\r\n}\r\nAddPostForm = reduxForm({\r\n    form: 'AddPostForm',\r\n    validate\r\n})(AddPostForm);\r\n\r\nconst MyPost = React.memo((props) => {\r\n    // console.log(\"RENDER\")\r\n    let mappedPosts = props.state.posts.map(post => <PostContainer post={post} profileImage={props.state.profile?.photos.large}/>)\r\n\r\n    let onPostClick = (values) => {\r\n        props.addPost(values.postText);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.posts}>\r\n            <div className={classes.container}>\r\n                <h2>My Posts</h2>\r\n\r\n                <AddPostForm onSubmit={onPostClick}/>\r\n\r\n                <div className={classes.posts_items}>\r\n                    {mappedPosts}\r\n                </div>\r\n            </div>\r\n        </div>);\r\n})\r\n\r\nexport default MyPost;","import React from 'react'\r\nimport {addPost, onChangePost} from \"../../../redux/profile-reducer\";\r\nimport MyPost from \"./MyPost\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        state: state.profilePage\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n        addPost\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPost);","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__dTD1s\",\"container\":\"Profile_container__4qISb\",\"profile_wrap\":\"Profile_profile_wrap__0ohEy\",\"profile__user\":\"Profile_profile__user__+0+jb\",\"profile__ava\":\"Profile_profile__ava__1pszl\",\"userPhoto\":\"Profile_userPhoto__E7+ka\",\"profile__user_label\":\"Profile_profile__user_label__TTDK9\",\"profile__user_text\":\"Profile_profile__user_text__O8OZ7\",\"profile__inner\":\"Profile_profile__inner__NnQF6\",\"profile__inner_data\":\"Profile_profile__inner_data__ujNMJ\",\"profile__inner_data_form\":\"Profile_profile__inner_data_form__xTdNf\",\"profile__button\":\"Profile_profile__button__+9Ko7\",\"contact\":\"Profile_contact__aH2Vw\",\"status\":\"Profile_status__Zf+ji\",\"show_details\":\"Profile_show_details__uR94U\"};","import React from \"react\";\r\nimport classes from \"./Profile.module.css\";\r\nimport {connect} from \"react-redux\";\r\nimport {onChangeStatus, saveProfileStatus} from \"../../redux/profile-reducer\";\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        statusValue: \"\"\r\n    }\r\n\r\n    activeEditMode() {\r\n        this.setState({\r\n            editMode : true\r\n        })\r\n    }\r\n    deActiveEditMode() {\r\n        this.setState({\r\n            editMode : false\r\n        })\r\n        this.props.saveProfileStatus(this.props.status)\r\n    }\r\n\r\n    onStatusChange(e) {\r\n        // this.setState({\r\n        //     statusValue: e.target.value\r\n        // })\r\n        this.props.onChangeStatus(e.target.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.status}>\r\n                {this.state.editMode\r\n                    ?\r\n                    <div>\r\n                        <input type=\"text\" value={this.props.status ? this.props.status : \"\"}\r\n                               autoFocus={true} onBlur={this.deActiveEditMode.bind(this)}\r\n                               onChange={event => this.onStatusChange(event)}/>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <span onDoubleClick={this.activeEditMode.bind(this)}>{!this.props.status?\"You don't have any status!\":this.props.status}</span>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        status: state.profilePage.profileStatus,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{onChangeStatus, saveProfileStatus})(ProfileStatus);","import classes from \"./Profile.module.css\";\r\nimport PreLoader from \"../common/Preloader/PreLoader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport userLogo from \"../../assets/img/user.png\"\r\nimport {React, useState} from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, Textarea} from \"../../utils/validators/FormValidator\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    //&& props.toggle\r\n    if (!props.profile) {\r\n        return <PreLoader/>\r\n    }\r\n\r\n    const savePhoto = (e) => {\r\n        if (e.target.files) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfileData(formData);\r\n        setEditMode(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <section className={classes.profile}>\r\n            <div className={classes.container}>\r\n                <div className={classes.profile_wrap}>\r\n                    <div className={classes.profile__user}>\r\n                        <h1>My Profile</h1>\r\n                        <div className={classes.profile__ava}>\r\n                            <div className={classes.userPhoto}>\r\n                                <img src={props.profile.photos.large || userLogo} alt=\"\"/>\r\n                                <input type=\"file\" id={\"file\"} onChange={savePhoto}/>\r\n                                <label htmlFor={\"file\"}>\r\n                                    <span>Upload Avatar</span>\r\n                                </label>\r\n                            </div>\r\n\r\n                            <p className={classes.profile__user_label}>Full Name</p>\r\n                            <p className={classes.profile__user_text}>{props.profile.fullName}</p>\r\n                            <p className={classes.profile__user_label}>Status</p>\r\n                            <p className={classes.profile__user_text}><ProfileStatus/></p>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.profile__inner}>\r\n                        {/*<h1>Profile Info</h1>*/}\r\n                        {!editMode\r\n                            ? <ProfileData profile={props.profile} switchEditMode={() => {\r\n                                setEditMode(true)\r\n                            }}/>\r\n                            : <ProfileDataForm onSubmit={onSubmit} initialValues={props.profile}/>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nconst ProfileData = ({profile, switchEditMode}) => {\r\n\r\n    const [showDetails, setShowDetails] = useState(false);\r\n\r\n    return (\r\n        <div className={classes.profile__inner_data}>\r\n            <p className={classes.profile__user_label}>Full name: </p>\r\n            <p className={classes.profile__user_text}>{profile.fullName}</p>\r\n            <p className={classes.profile__user_label}>About Me: </p>\r\n            <p className={classes.profile__user_text}>{profile.aboutMe}</p>\r\n            <p className={classes.profile__user_label}>Looking For A Job: </p>\r\n            <p className={classes.profile__user_text}>{profile.lookingForAJob ? \"No,I appreciate to Dimych!\" : \"In Search\"}</p>\r\n            <p className={classes.profile__user_label}>My Skilss: </p>\r\n            <p className={classes.profile__user_text}>{profile.lookingForAJobDescription}</p>\r\n            <button className={classes.profile__button} onClick={() => setShowDetails(prevState => !prevState)}>{showDetails ? \"Hide Details\" : \"Show Details\"}</button>\r\n            {\r\n                showDetails && (\r\n                    <div className={classes.show_details}>\r\n                        <div>\r\n                            <p className={classes.profile__user_label}>Contacts: </p>\r\n                            {Object.keys(profile.contacts).map(key => {\r\n                                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n                            })}\r\n                        </div>\r\n                        <div>\r\n                            <button className={classes.profile__button} onClick={switchEditMode}>Edit</button>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet ProfileDataForm = ({initialValues, switchEditMode, handleSubmit}) => {\r\n    return (\r\n        <div className={classes.profile__inner_data_form}>\r\n            <h1>Edit Proflie Info</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <p className={classes.profile__user_label}>Full Name: </p>\r\n                <Field label={\"Full Name\"} name={\"fullName\"} component={Input} type={\"text\"}/>\r\n\r\n                <p className={classes.profile__user_label}>About me: </p>\r\n                <Field label={\"About me\"} name={\"aboutMe\"} component={Textarea}/>\r\n\r\n                <p className={classes.profile__user_label}>Looking For a Job</p>\r\n                <Field name={\"lookingForAJob\"} component={Input} type={\"checkbox\"}/>\r\n\r\n                <p className={classes.profile__user_label}>My Skilss: </p>\r\n                <Field label={\"Description\"} name={\"lookingForAJobDescription\"} component={Textarea}/>\r\n\r\n                <div>\r\n                    <p className={classes.profile__user_label}>Contacts: </p> {Object.keys(initialValues.contacts).map(key => {\r\n                    return <div className={classes.contact}>\r\n                        <p className={classes.profile__user_label}>{key}: </p>\r\n                        <Field name={\"contacts.\" + key} label={key} component={Input}/>\r\n                    </div>\r\n                })}\r\n                </div>\r\n                <button className={classes.profile__button}>Save</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nProfileDataForm = reduxForm({form: 'ProfileDataForm'})(ProfileDataForm);\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div className={classes.contact}>\r\n            <p className={classes.profile__user_label}>{contactTitle}: </p>\r\n            <a className={classes.profile__user_text} href={contactValue}>{contactValue}</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import MyPostContainer from \"./MyPost/MyPostContainer\";\r\nimport ProfileInfo from \"./ProfileInfo\";\r\nimport userLogo from \"../../assets/img/user.png\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.state.profile}\r\n                         toggle={props.state.toggleIsFetching}\r\n                         status={props.state.profileStatus}\r\n                         savePhoto={props.savePhoto}\r\n                         saveProfileData={props.saveProfileData}\r\n            />\r\n            <MyPostContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\n\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileStatus, getProfileUser, savePhoto, saveProfileData} from \"../../redux/profile-reducer\";\r\nimport {useMatch} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\n\r\n// import {withRouter} from \"react-router-dom\";\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n    componentDidMount() {\r\n        let userId = this.props.userId;\r\n        if (this.props.matchId) {\r\n            userId = this.props.matchId;\r\n            debugger\r\n        }\r\n        // if (!this.props.match){\r\n        //     userId = 2;\r\n        // }else\r\n        //     userId = this.props.match.params.userId;\r\n        this.props.getProfileUser(userId);\r\n        this.props.getProfileStatus(userId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n    }\r\n\r\n    render() {\r\n        return <Profile state={this.props.state} savePhoto={this.props.savePhoto} saveProfileData={this.props.saveProfileData}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state.profilePage,\r\n    userId: state.auth.id\r\n})\r\nexport const withRouter = (Component) =>{\r\n\r\n    let RouterComponent = (props) => {\r\n\r\n        const match = useMatch('/profile/:userId');\r\n        // console.log(match)\r\n        return <Component {...props} matchId={match?.params.userId}/>;\r\n\r\n    }\r\n    return RouterComponent;\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    withRouter,\r\n    connect(mapStateToProps, {getProfileUser, getProfileStatus, savePhoto, saveProfileData})\r\n)(ProfileContainer);\r\n\r\n"],"names":["props","className","classes","src","profileImage","user","width","alt","like","onClick","e","preventDefault","post","likesCount","message","delete_icon","deletePost","store","deletePostAction","id","likeAction","maxLength15","maxLengthCreator","AddPostForm","onSubmit","handleSubmit","Field","component","Textarea","name","label","reduxForm","form","validate","values","errors","postText","React","mappedPosts","state","posts","map","profile","photos","large","addPost","mapDispatchToProps","connect","profilePage","MyPost","ProfileStatus","editMode","statusValue","this","setState","saveProfileStatus","status","onChangeStatus","target","value","type","autoFocus","onBlur","deActiveEditMode","bind","onChange","event","onStatusChange","onDoubleClick","activeEditMode","profileStatus","ProfileData","switchEditMode","useState","showDetails","setShowDetails","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","prevState","Object","keys","contacts","key","Contact","contactTitle","contactValue","ProfileDataForm","initialValues","Input","href","setEditMode","PreLoader","userLogo","files","savePhoto","htmlFor","formData","saveProfileData","toggle","toggleIsFetching","MyPostContainer","ProfileContainer","userId","matchId","getProfileUser","getProfileStatus","prevProps","snapshot","withRouter","Component","match","useMatch","params","compose","withAuthRedirect","auth"],"sourceRoot":""}